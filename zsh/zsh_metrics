# metrics
previous_sprint() {
  echo "$(jira sprint list --state closed --table | head -n 2)"
}

previous_sprint_dates() {
  local dates=$(previous_sprint | tail -n 1 | awk '{print $6, $8}')

  local datesArray=(${(s: :)dates})
  local startDate=$datesArray[1]
  local endDate=$datesArray[2]

  echo $startDate $endDate
}

lines_of_code() {
  local cloc_output=$(cloc --exclude-dir="node_modules,dist,coverage,cis-metrics,.idea,.angular,.vscode,local-mock-data" .)
  parse_cloc_sum_line $cloc_output
}

deployment_lines_of_code() {
  local cloc_output=$(cloc "./Deploy/codebuild/buildspecs/buildspec.yml")
  parse_cloc_sum_line $cloc_output
}

parse_cloc_sum_line() {
  local sum_line=$(echo "$1" | tail -n 2 | head -n 1)
  echo "$(echo "$sum_line" | awk '{print $NF}')"
}

unit_test_coverage() {
  local coverage_output=$(npm run coverage)
  local coverage_line=$(cat "./coverage/lcov-report/lcov-report/index.html" | head -n 47 | tail -n 1)

  echo -n "$coverage_line" | sed 's/.*>\(.*\)% <.*/\1/'
}

prod_builds() {
  local build_output=$(aws codebuild batch-get-builds --ids $(aws codebuild list-builds-for-project --project-name "$PROD_SFUI_BUILD_NAME" --sort-order DESCENDING | jq -r ".ids[]"))

  local builds_in_range=$(echo "$build_output" | jq "[.builds[] | select(.startTime >= \"$1\" and .startTime <= \"$2\" and .endTime <= \"$2\" and .buildStatus == \"SUCCEEDED\")"])
  local builds_array=$(echo "$builds_in_range" | jq "[.[] | {id, startTime, buildStatus, resolvedSourceVersion}]")

  echo "$builds_array" | jq -r
}

gather_metrics() {
  local dates=("${(@s/ /)$(previous_sprint_dates)}")

  local startDate=$dates[1]
  local endDate=$dates[2]

  git checkout `git rev-list -1 --before="$dates[2]" HEAD origin/develop`

  lines=$(lines_of_code)
  deployment_lines=$(deployment_lines_of_code)
  test_coverage=$(unit_test_coverage)

  local builds_array=$(prod_builds $startDate $endDate) 
  local prod_count=$(echo "$builds_array" | jq 'length')

  clear
  echo "$(previous_sprint | tail -n 1 | awk '{print $2 $3 $4 $5}')\n"
  echo "Lines of code: $lines"
  echo "Unit Test Coverage: $test_coverage"
  echo "Deployment lines of code: $deployment_lines"
  echo "Production Deployments: $prod_count"

  open "$SONAR_CLOUD_URL"
  open "$METRICS_SPREADSHEET_URL"
  open "$METRICS_CONFLUENCE_URL"
}
